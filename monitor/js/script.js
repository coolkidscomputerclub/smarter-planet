// Generated by CoffeeScript 1.3.3
(function() {
  var Inhabitant, config, main, presenceChange, step;

  config = {
    socketServer: '192.168.0.2'
  };

  Inhabitant = (function() {

    function Inhabitant(index, id, name) {
      this.index = index;
      this.id = id;
      this.name = name;
      this.inactiveState = {
        "stroke-width": 4,
        stroke: "#ebebeb"
      };
      this.activeState = {
        "stroke-width": 8,
        stroke: "#9ADEB3"
      };
    }

    Inhabitant.prototype.draw = function(context) {
      this.avatar = context.circle(135 + (this.index * 250), 95, 75).attr({
        fill: "url(images/" + this.id + ".jpg)"
      });
      this.avatar.click(function(e) {});
      if (!this.home) {
        this.avatar.attr(this.inactiveState);
      } else {
        this.avatar.attr(this.activeState);
      }
      this.label = context.text(135 + (this.index * 250), 192, this.name).attr({
        "font-family": "Helvetica Neue",
        "font-size": 18,
        fill: "#999"
      });
      return this.status = context.text(135 + (this.index * 250), 212, "is out and about").attr({
        "font-family": "Helvetica Neue",
        "font-size": 12,
        fill: "#648D8E"
      });
    };

    Inhabitant.prototype.setStatus = function(newStatus) {
      return this.status.attr({
        text: newStatus
      });
    };

    Inhabitant.prototype.isHome = function() {
      return this.home;
    };

    Inhabitant.prototype.togglePresence = function() {
      this.home = this.home ? false : true;
      if (this.home) {
        this.avatar.animate(this.activeState, 1000);
        return this.setStatus("just got in");
      } else {
        this.avatar.animate(this.inactiveState, 1000);
        return this.setStatus("just left");
      }
    };

    return Inhabitant;

  })();

  presenceChange = function(id) {
    return housemates[id].togglePresence();
  };

  step = function() {
    var date, hour, minutes;
    date = new Date();
    hour = date.getHours();
    minutes = date.getMinutes() * (2 / 3);
    return window.nowBar.animate({
      x: 32 + (hour * 40) + minutes
    }, 300);
  };

  main = {
    init: function() {
      return this.connectSocket();
    },
    connectSocket: function() {
      this.socket = io.connect("//" + config.socketServer + ":8080");
      return this.bindSocketEvents();
    },
    bindSocketEvents: function() {
      return this.socket.on("event", function(data) {
        switch (data.type) {
          case "presence":
            return console.log(data.user.name + "'s presence changed: " + data.user.presence);
        }
      });
    }
  };

  $(function() {
    var housemates, i, id, mate, paper, _i;
    $(document).bind('touchmove', function(event) {
      return event.preventDefault();
    });
    paper = Raphael("mainCanvas", 1024, 768);
    housemates = {
      saul: new Inhabitant(0, "saul", "Saul"),
      ben: new Inhabitant(1, "ben", "Ben"),
      james: new Inhabitant(2, "james", "James"),
      flo: new Inhabitant(3, "flo", "Florian")
    };
    for (id in housemates) {
      mate = housemates[id];
      mate.draw(paper);
    }
    window.nowBar = paper.rect(32, 300, 3, 300).attr({
      fill: "#ebebeb",
      "stroke-width": 0,
      "fill-opacity": 0.6
    });
    for (i = _i = 0; _i <= 24; i = ++_i) {
      paper.text(32 + (i * 40), 560, i).attr({
        fill: "#648D8E",
        "font-size": 12
      });
    }
    step();
    paper.path("M32 500L352 500L392 420L472 420L672 500L792 500L832 400L952 400L992 500").attr({
      "stroke": "#999",
      "stroke-dasharray": "--"
    });
    setInterval(step, 60000);
    return main.init();
  });

}).call(this);
